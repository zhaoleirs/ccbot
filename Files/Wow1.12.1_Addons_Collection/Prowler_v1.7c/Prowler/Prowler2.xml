<Ui xmlns="http://www.blizzard.com/wow/ui/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.blizzard.com/wow/ui/ ..\FrameXML\UI.xsd">
	<Script file="Prowler.lua"/>
	<Frame name = "ProwlerFrame">
	   <Scripts>
	      <OnLoad>
	         Prowler_OnLoad();
	      </OnLoad>
	      <OnEvent>
	         Prowler_OnEvent(arg1);
	      </OnEvent>
	   </Scripts>
	</Frame>
	
	<Frame name="ProwlerFrames" hidden="true" toplevel="true" virtual="true" frameStrata="DIALOG" parent="UIParent">
        <Size> 
			<AbsDimension x="200" y="380"/> 
		</Size> 
        <Anchors>
                <Anchor point="CENTER"/>
        </Anchors>
        <Backdrop bgFile="Interface\DialogFrame\UI-DialogBox-Background" edgeFile="Interface\DialogFrame\UI-DialogBox-Border" tile="true">
                <TileSize>
                        <AbsValue val="64"/>
                </TileSize>
                <EdgeSize>
                        <AbsValue val="32"/>
                </EdgeSize>
                <BackgroundInsets>
                        <AbsInset left="11" right="12" top="12" bottom="11"/>
                </BackgroundInsets>
        </Backdrop>
	</Frame>
	
	<Frame name="ProwlerTitleFrames" hidden="false" toplevel="true" virtual="true" frameStrata="DIALOG" parent="ProwlerFrames">
        <Size> 
			<AbsDimension x="130" y="50"/> 
		</Size> 
        <Anchors>
                <Anchor point="TOP"/>
        </Anchors>
        <Backdrop bgFile="Interface\DialogFrame\UI-DialogBox-Background" edgeFile="Interface\DialogFrame\UI-DialogBox-Border" tile="true">
                <TileSize>
                        <AbsValue val="64"/>
                </TileSize>
                <EdgeSize>
                        <AbsValue val="32"/>
                </EdgeSize>
                <BackgroundInsets>
                        <AbsInset left="11" right="12" top="12" bottom="11"/>
                </BackgroundInsets>
        </Backdrop>
	</Frame>		
	
	<Frame name="Prowler1" inherits="ProwlerFrames" movable="true" enableMouse="true">
		<Layers> 
			<Layer level="ARTWORK"> 
				<FontString name="$parent_Text1" inherits="GameFontNormal" text="Main Bar">
					<Anchors>
						<Anchor point="TOPLEFT">
							<Offset>
								<AbsDimension x="65" y="-37"/>
							</Offset>
						</Anchor>
					</Anchors>
				</FontString>
				<FontString name="$parent_Text2" inherits="GameFontNormal" text="Prowl Bar">
					<Anchors>
						<Anchor point="TOPLEFT">
							<Offset>
								<AbsDimension x="65" y="-97"/>
							</Offset>
						</Anchor>
					</Anchors>
				</FontString>
				<FontString name="$parent_Text2" inherits="GameFontNormal" text="Cat Mode">
					<Anchors>
						<Anchor point="TOPLEFT">
							<Offset>
								<AbsDimension x="65" y="-157"/>
							</Offset>
						</Anchor>
					</Anchors>
				</FontString>
				<FontString name="$parent_Text2" inherits="GameFontNormal" text="Track Mode">
					<Anchors>
						<Anchor point="TOPLEFT">
							<Offset>
								<AbsDimension x="65" y="-217"/>
							</Offset>
						</Anchor>
					</Anchors>
				</FontString>
			</Layer>
		</Layers>
        <Frames>
			<Frame name="$parent_TitleText" inherits="ProwlerTitleFrames" parent= "Prowler1">
				<Anchors>
					<Anchor point="TOP">
						<Offset>
							<AbsDimension x="0" y="20"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Layers> 
					<Layer level="BACKGROUND"> 
						<Texture name="$parentTexture">
							<Size>
                                <AbsDimension x="117" y="37"/>
							</Size>
							<Anchors>
                                <Anchor point="CENTER" />
							</Anchors>
							<Color r="0" g="0" b="0" a="1" /> 
						</Texture>
					</Layer>
					<Layer level="ARTWORK"> 
						<FontString name="$parent_Text3" inherits="GameFontNormal" text="Prowler 1.8">
							<Anchors>
								<Anchor point="CENTER"/>
							</Anchors>
						</FontString>
					</Layer>
				</Layers> 
				<Script>
					<OnLoad>
						Prowler1_TitleText:Show();
					</OnLoad>
				</Script>
			</Frame> 
			<CheckButton name="$parent_CheckButton1" inherits="UICheckButtonTemplate" id="16" text="Hello">
				<Size>
					<AbsDimension x="20" y="20"/>
				</Size>
				<Anchors> 
					<Anchor point="TOPLEFT">
						<Offset>
							<AbsDimension x="13" y="-330"/>
						</Offset>
					</Anchor>
				</Anchors>      
				<Scripts>
					<OnLoad>
						getglobal(this:GetName().."Text"):SetText("Enable/Disable");
						getglobal(this:GetName()):SetChecked(toggle);
					</OnLoad>
					<OnClick>
						Prowler_OnClick1(arg1)
					</OnClick>
				</Scripts>
			</CheckButton>
			<CheckButton name="$parent_CheckButton2" inherits="UICheckButtonTemplate" id="16" text="Hello">
				<Size>
					<AbsDimension x="20" y="20"/>
				</Size>
				<Anchors> 
					<Anchor point="TOPLEFT">
						<Offset>
							<AbsDimension x="13" y="-350"/>
						</Offset>
					</Anchor>
				</Anchors>      
				<Scripts>
					<OnLoad>
						getglobal(this:GetName().."Text"):SetText("Lock Window");
						getglobal(this:GetName()):SetChecked(locked);
					</OnLoad>
					<OnClick>
						Prowler_OnClick2(arg1)
					</OnClick>
				</Scripts>
			</CheckButton>
			
			<CheckButton name="$parent_CheckButton5" inherits="UICheckButtonTemplate" id="16" text="Hello">
				<Size>
					<AbsDimension x="20" y="20"/>
				</Size>
				<Anchors> 
					<Anchor point="TOPLEFT">
						<Offset>
							<AbsDimension x="13" y="-310"/>
						</Offset>
					</Anchor>
				</Anchors>      
				<Scripts>
					<OnLoad>
						getglobal(this:GetName().."Text"):SetText("Bear and Charge");
						getglobal(this:GetName()):SetChecked(charg_toggle);
					</OnLoad>
					<OnClick>
						Prowler_OnClick5(arg1)
					</OnClick>
				</Scripts>
			</CheckButton>
			
			<CheckButton name="$parent_CheckButton3" inherits="UICheckButtonTemplate" id="16" text="Hello">
				<Size>
					<AbsDimension x="20" y="20"/>
				</Size>
				<Anchors> 
					<Anchor point="TOPLEFT">
						<Offset>
							<AbsDimension x="13" y="-290"/>
						</Offset>
					</Anchor>
				</Anchors>      
				<Scripts>
					<OnLoad>
						getglobal(this:GetName().."Text"):SetText("Last Used Bar");
						getglobal(this:GetName()):SetChecked(prev);
					</OnLoad>
					<OnClick>
						Prowler_OnClick3(arg1)
					</OnClick>
				</Scripts>
			</CheckButton>
			<CheckButton name="$parent_CheckButton4" inherits="UICheckButtonTemplate" id="16" text="Hello">
				<Size>
					<AbsDimension x="20" y="20"/>
				</Size>
				<Anchors> 
					<Anchor point="TOPLEFT">
						<Offset>
							<AbsDimension x="13" y="-270"/>
						</Offset>
					</Anchor>
				</Anchors>      
				<Scripts>
					<OnLoad>
						getglobal(this:GetName().."Text"):SetText("MoveAnything! Fix");
						getglobal(this:GetName()):SetChecked(MA_toggle);
					</OnLoad>
					<OnClick>
						Prowler_OnClick4(arg1)
					</OnClick>
				</Scripts>
			</CheckButton>
			<Button name="$parent_Button1" inherits="UIPanelCloseButton">
				<Anchors> 
					<Anchor point="TOPRIGHT">
						<Offset>
							<AbsDimension x="-4" y="-4"/>
						</Offset>
					</Anchor>
				</Anchors> 
			</Button>
			<Slider name="$parent_Slider1" inherits="OptionsSliderTemplate"  minValue="1" maxValue="7" defaultValue="1" valueStep="1">
				<Anchors>
					<Anchor point="TOPLEFT">
						<Offset>
							<AbsDimension x="40" y="-60" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						Prowler_InitSlider1(this:GetName(),main_ab);
					</OnLoad>
					<OnValueChanged> <!-- we need to update the text on value change -->
						getglobal(this:GetName().."Text"):SetText(getglobal(this:GetName()):GetValue());
						main_ab = getglobal(this:GetName()):GetValue()
					</OnValueChanged>
				</Scripts>
			</Slider>		
			<Slider name="$parent_Slider2" inherits="OptionsSliderTemplate"  minValue="1" maxValue="7" defaultValue="1" valueStep="1">
				<Anchors>
					<Anchor point="TOPLEFT">
						<Offset>
							<AbsDimension x="40" y="-120" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						Prowler_InitSlider1(this:GetName(),prowl_ab);
					</OnLoad>
					<OnValueChanged> <!-- we need to update the text on value change -->
						getglobal(this:GetName().."Text"):SetText(getglobal(this:GetName()):GetValue());
						prowl_ab = getglobal(this:GetName()):GetValue()
					</OnValueChanged>
				</Scripts>
			</Slider>
			<Slider name="$parent_Slider3" inherits="OptionsSliderTemplate"  minValue="1" maxValue="3" defaultValue="1" valueStep="1">
				<Anchors>
					<Anchor point="TOPLEFT">
						<Offset>
							<AbsDimension x="40" y="-180" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						Prowler_InitSlider2(this:GetName(),cat_mode);
					</OnLoad>
					<OnValueChanged> <!-- we need to update the text on value change -->
						cat_mode = getglobal(this:GetName()):GetValue()
						if (cat_mode == 1) then
							getglobal(this:GetName().."Text"):SetText("Cat Only");
						elseif (cat_mode == 2) then
							getglobal(this:GetName().."Text"):SetText("Prowl Only");
						elseif (cat_mode == 3) then
							getglobal(this:GetName().."Text"):SetText("Prowl and Unprowl");
						end
					</OnValueChanged>
				</Scripts>
			</Slider>
			<Slider name="$parent_Slider4" inherits="OptionsSliderTemplate"  minValue="1" maxValue="3" defaultValue="1" valueStep="1">
				<Anchors>
					<Anchor point="TOPLEFT">
						<Offset>
							<AbsDimension x="40" y="-240" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						Prowler_InitSlider3(this:GetName(),track_mode);
					</OnLoad>
					<OnValueChanged> <!-- we need to update the text on value change -->
						track_mode = getglobal(this:GetName()):GetValue()
						if (track_mode == 1) then
							getglobal(this:GetName().."Text"):SetText("Never Track");
						elseif (track_mode == 2) then
							getglobal(this:GetName().."Text"):SetText("Out of Combat");
						elseif (track_mode == 3) then
							getglobal(this:GetName().."Text"):SetText("Anytime");
						end
					</OnValueChanged>
				</Scripts>
			</Slider>			
		</Frames>
		<Scripts>
			<OnMouseUp>
				if ( this.isMoving ) then
					this:StopMovingOrSizing();
					this.isMoving = false;
				end
			</OnMouseUp>
			<OnMouseDown>
				if ( ( ( not this.isLocked ) or ( this.isLocked == 0 ) ) and ( arg1 == "LeftButton" ) ) then
					this:StartMoving();
					this.isMoving = true;
				end
			</OnMouseDown>
			<OnHide>
				if ( this.isMoving ) then
					this:StopMovingOrSizing();
					this.isMoving = false;
				end
			</OnHide>
		</Scripts>
	</Frame>
	
	<GameTooltip name="ProwlerTooltip" frameStrata="TOOLTIP" hidden="true" inherits="GameTooltipTemplate"/>
</Ui>