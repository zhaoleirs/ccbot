-- Auto generated by WoWBench 1.11.0.a3 from "D:/Games/World of Warcraft/Interface/AddOns/Warrior/GUI/Main.xml" on 2006-07-20 21:11:38
local WOWB_XMLFILE="D:/Games/World of Warcraft/Interface/AddOns/Warrior/GUI/Main.xml";
local WOWB_XMLFILENOPATH="D:/Games/World of Warcraft/Interface/AddOns/Warrior/GUI/Main.xml";
local WOWB_TAG = { [0]={content=""} }
local WOWB_PARENTOBJECT = WOWB_RootFrame;
local xfpc = WOWB_XMLFileParserContext:New(WOWB_XMLFILE);

do -- <Ui ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1
local WOWB_TAG = { [0]={  xmltag="Ui",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["xmlns"] ="http://www.blizzard.com/wow/ui/",
["xmlns:xsi"] ="http://www.w3.org/2001/XMLSchema-instance",
["xsi:schemaLocation"] ="http://www.blizzard.com/wow/ui/",
}};
WOWB_PARENT[0]["Ui"] = WOWB_TAG;
do -- <Script ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=3
local WOWB_TAG = { [0]={  xmltag="Script",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=3,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["file"] ="Main.lua",
}};
if not WOWB_EXECCOMPILED then
  WOWB_ParseXML_dofile(xfpc, WOWB_TAG[0].file);
end
tinsert(WOWB_PARENT[0], WOWB_TAG);
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=7
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=7,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="WARRIORGUIFrame",
["movable"] ="true",
["hidden"] ="true",
["parent"] ="UIParent",
["frameStrata"] ="DIALOG",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Button);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=8
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=8,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=8
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=8,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =410,
["y"] =337,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=9
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=9,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=10
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=10,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="CENTER",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
end
end
do -- <Frames ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=12
local WOWB_TAG = { [0]={  xmltag="Frames",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=12,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Frames"]) then
  WOWB_PARENT[0]["Frames"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Frames"];
end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=14
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=14,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["hidden"] ="false",
["virtual"] ="true",
}};
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
local WOWB_PARENTOBJECT = nil;
local WOWB_ISVIRTUAL = true;
WOWB_InheritType(WOWB_TAG, WBClass_Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Button);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=15
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=15,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=15
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=15,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =32,
["y"] =32,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=16
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=16,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=17
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=17,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPRIGHT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=18
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=18,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=18
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=18,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =-5,
["y"] =-5,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <NormalTexture ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=21
local WOWB_TAG = { [0]={  xmltag="NormalTexture",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=21,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["file"] ="Interface\\Buttons\\UI-Panel-MinimizeButton-Up",
}};
if(not bIgnored) then WOWB_PARENT[0]["NormalTexture"] = WOWB_TAG; end
WOWB_InheritType(WOWB_TAG, WBClass_Texture);
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Texture);

end
do -- <PushedTexture ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=22
local WOWB_TAG = { [0]={  xmltag="PushedTexture",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=22,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["file"] ="Interface\\Buttons\\UI-Panel-MinimizeButton-Down",
}};
if(not bIgnored) then WOWB_PARENT[0]["PushedTexture"] = WOWB_TAG; end
WOWB_InheritType(WOWB_TAG, WBClass_Texture);
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Texture);

end
do -- <HighlightTexture ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=23
local WOWB_TAG = { [0]={  xmltag="HighlightTexture",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=23,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["file"] ="Interface\\Buttons\\UI-Panel-MinimizeButton-Highlight",
["alphaMode"] ="ADD",
}};
if(not bIgnored) then WOWB_PARENT[0]["HighlightTexture"] = WOWB_TAG; end
WOWB_InheritType(WOWB_TAG, WBClass_Texture);
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Texture);

end
do -- <Scripts ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=24
local WOWB_TAG = { [0]={  xmltag="Scripts",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=24,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Scripts"]) then
  WOWB_PARENT[0]["Scripts"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Scripts"];
end
do -- <OnClick ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=25
local WOWB_TAG = { [0]={  xmltag="OnClick",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=25,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnClick"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\t\tWARRIORGUIFrame:Hide();\n\t\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=32
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=32,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="WARRIORGUI_ActivateClassButton",
["inherits"] ="UIPanelButtonTemplate",
["hidden"] ="false",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Button);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=33
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=33,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=33
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=33,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =50,
["y"] =20,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=34
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=34,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=35
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=35,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPRIGHT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=36
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=36,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=36
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=36,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =-13,
["y"] =-47,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <HighlightTexture ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=39
local WOWB_TAG = { [0]={  xmltag="HighlightTexture",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=39,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["alphaMode"] ="ADD",
["file"] ="Interface\\Buttons\\ButtonHilight-Square",
}};
if(not bIgnored) then WOWB_PARENT[0]["HighlightTexture"] = WOWB_TAG; end
WOWB_InheritType(WOWB_TAG, WBClass_Texture);
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Texture);

end
do -- <Layers ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=40
local WOWB_TAG = { [0]={  xmltag="Layers",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=40,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Layers"]) then
  WOWB_PARENT[0]["Layers"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Layers"];
end
do -- <Layer ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=41
local WOWB_TAG = { [0]={  xmltag="Layer",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=41,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["level"] ="ARTWORK",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <FontString ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=42
local WOWB_TAG = { [0]={  xmltag="FontString",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=42,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="$parent_Text",
["inherits"] ="ChatFontNormal",
["font"] ="Fonts\\ARIALN.TTF",
["text"] ="Activate",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

do -- <Color ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=43
local WOWB_TAG = { [0]={  xmltag="Color",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=43,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["r"] =1,
["g"] =1,
["b"] =1,
}};
WOWB_PARENT[0]["Color"] = WOWB_TAG;
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=44
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=44,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=45
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=45,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="CENTER",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
end
end
do -- <FontHeight ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=47
local WOWB_TAG = { [0]={  xmltag="FontHeight",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=47,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["FontHeight"] = WOWB_TAG;
do -- <AbsValue ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=48
local WOWB_TAG = { [0]={  xmltag="AbsValue",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=48,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["val"] =11,
}};
WOWB_PARENT[0]["AbsValue"] = WOWB_TAG;
end
end
end
end
end
do -- <Scripts ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=53
local WOWB_TAG = { [0]={  xmltag="Scripts",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=53,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Scripts"]) then
  WOWB_PARENT[0]["Scripts"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Scripts"];
end
do -- <OnClick ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=54
local WOWB_TAG = { [0]={  xmltag="OnClick",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=54,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnClick"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\t\tif (WARRIOR.Classes:Activate(WARRIORGUI_ClassSelection.prevvalue)) then\n\t\t\t\t\t\tWARRIORGUI_ActivateClassButton:Disable();\n\t\t\t\t\t\tWARRIORGUI_DeleteClassButton:Disable();\n\t\t\t\t\tend\n\t\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <CheckButton ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=64
local WOWB_TAG = { [0]={  xmltag="CheckButton",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=64,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="WARRIORGUI_ClassKeybindingButton",
["inherits"] ="WARRIORGUI_KeybindingTemplate",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_CheckButton);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_CheckButton);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=65
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=65,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=65
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=65,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =40,
["y"] =20,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=66
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=66,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=67
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=67,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPRIGHT",
["relativeTo"] ="WARRIORGUI_ActivateClassButton",
["relativePoint"] ="TOPLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
end
end
do -- <Scripts ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=69
local WOWB_TAG = { [0]={  xmltag="Scripts",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=69,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Scripts"]) then
  WOWB_PARENT[0]["Scripts"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Scripts"];
end
do -- <OnShow ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=70
local WOWB_TAG = { [0]={  xmltag="OnShow",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=70,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnShow"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\t\tWARRIORGUI_KeyBindingButton_Update();\n\t\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <ScrollFrame ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=77
local WOWB_TAG = { [0]={  xmltag="ScrollFrame",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=77,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="WARRIORGUI_ClassSpellScrollFrame",
["inherits"] ="FauxScrollFrameTemplate",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_ScrollFrame);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_ScrollFrame);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=78
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=78,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=78
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=78,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =364,
["y"] =190,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=79
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=79,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=80
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=80,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=81
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=81,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=81
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=81,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =10,
["y"] =-74,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Scripts ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=84
local WOWB_TAG = { [0]={  xmltag="Scripts",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=84,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Scripts"]) then
  WOWB_PARENT[0]["Scripts"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Scripts"];
end
do -- <OnVerticalScroll ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=85
local WOWB_TAG = { [0]={  xmltag="OnVerticalScroll",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=85,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnVerticalScroll"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\t\tFauxScrollFrame_OnVerticalScroll(32, WARRIORGUI_ClassSpellScrollFrame_Update);\n\t\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Frame ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=90
local WOWB_TAG = { [0]={  xmltag="Frame",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=90,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="WARRIORGUI_ClassSpellButton_1",
["inherits"] ="WARRIORGUI_ClassSpellButtonTemplate",
["id"] =1,
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Frame);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Frame);

do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=91
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=91,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=92
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=92,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
["relativeTo"] ="WARRIORGUI_ClassSpellScrollFrame",
["relativePoint"] ="TOPLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=93
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=93,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=93
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=93,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =5,
["y"] =0,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
end
do -- <Frame ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=97
local WOWB_TAG = { [0]={  xmltag="Frame",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=97,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="WARRIORGUI_ClassSpellButton_2",
["inherits"] ="WARRIORGUI_ClassSpellButtonTemplate",
["id"] =2,
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Frame);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Frame);

end
do -- <Frame ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=98
local WOWB_TAG = { [0]={  xmltag="Frame",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=98,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="WARRIORGUI_ClassSpellButton_3",
["inherits"] ="WARRIORGUI_ClassSpellButtonTemplate",
["id"] =3,
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Frame);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Frame);

end
do -- <Frame ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=99
local WOWB_TAG = { [0]={  xmltag="Frame",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=99,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="WARRIORGUI_ClassSpellButton_4",
["inherits"] ="WARRIORGUI_ClassSpellButtonTemplate",
["id"] =4,
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Frame);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Frame);

end
do -- <Frame ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=100
local WOWB_TAG = { [0]={  xmltag="Frame",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=100,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="WARRIORGUI_ClassSpellButton_5",
["inherits"] ="WARRIORGUI_ClassSpellButtonTemplate",
["id"] =5,
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Frame);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Frame);

end
do -- <Frame ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=101
local WOWB_TAG = { [0]={  xmltag="Frame",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=101,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="WARRIORGUI_ClassSpellButton_6",
["inherits"] ="WARRIORGUI_ClassSpellButtonTemplate",
["id"] =6,
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Frame);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Frame);

end
do -- <Frame ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=104
local WOWB_TAG = { [0]={  xmltag="Frame",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=104,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="WARRIORGUI_ClassSelection",
["inherits"] ="WARRIORGUI_EditMenuControlTemplate",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Frame);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Frame);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=105
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=105,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=105
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=105,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =100,
["y"] =22,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=106
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=106,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=107
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=107,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="BOTTOMLEFT",
["relativeTo"] ="WARRIORGUI_ClassSpellScrollFrame",
["relativePoint"] ="TOPLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=108
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=108,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=108
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=108,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =10,
["y"] =2,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Scripts ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=111
local WOWB_TAG = { [0]={  xmltag="Scripts",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=111,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Scripts"]) then
  WOWB_PARENT[0]["Scripts"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Scripts"];
end
do -- <OnLoad ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=112
local WOWB_TAG = { [0]={  xmltag="OnLoad",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=112,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnLoad"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\t\tthis:SetBackdropColor(0.0, 0.0, 0.0);\n\t\t\t\t\tthis.menu = \"WARRIORGUI_DropMenu\";\n\t\t\t\t\tthis.table = \"WARRIOR.Classes._database\";\n\t\t\t\t\tthis.clickFunc = WARRIORGUI_ClassDropMenu_OnClick;\n\t\t\t\t\tthis.editFunc = WARRIORGUI_ClassDropMenu_Edit;\n\t\t\t\t\tthis.prevvalue = WARRIOR.Classes._active;\n\t\t\t\t\tgetglobal(this:GetName()..\"_Label\"):SetText(\"Classes\");\n\t\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=125
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=125,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="WARRIORGUI_DeleteClassButton",
["inherits"] ="UIPanelButtonTemplate",
["hidden"] ="false",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Button);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=126
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=126,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=126
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=126,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =25,
["y"] =20,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=127
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=127,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=128
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=128,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="LEFT",
["relativeTo"] ="WARRIORGUI_ClassSelection",
["relativePoint"] ="RIGHT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=129
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=129,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=129
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=129,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =12,
["y"] =4,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <HighlightTexture ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=132
local WOWB_TAG = { [0]={  xmltag="HighlightTexture",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=132,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["alphaMode"] ="ADD",
["file"] ="Interface\\Buttons\\ButtonHilight-Square",
}};
if(not bIgnored) then WOWB_PARENT[0]["HighlightTexture"] = WOWB_TAG; end
WOWB_InheritType(WOWB_TAG, WBClass_Texture);
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Texture);

end
do -- <Layers ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=133
local WOWB_TAG = { [0]={  xmltag="Layers",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=133,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Layers"]) then
  WOWB_PARENT[0]["Layers"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Layers"];
end
do -- <Layer ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=134
local WOWB_TAG = { [0]={  xmltag="Layer",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=134,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["level"] ="ARTWORK",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <FontString ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=135
local WOWB_TAG = { [0]={  xmltag="FontString",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=135,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="$parent_Text",
["inherits"] ="ChatFontNormal",
["font"] ="Fonts\\ARIALN.TTF",
["text"] ="Del",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

do -- <Color ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=136
local WOWB_TAG = { [0]={  xmltag="Color",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=136,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["r"] =1,
["g"] =1,
["b"] =1,
}};
WOWB_PARENT[0]["Color"] = WOWB_TAG;
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=137
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=137,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=138
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=138,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="CENTER",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
end
end
do -- <FontHeight ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=140
local WOWB_TAG = { [0]={  xmltag="FontHeight",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=140,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["FontHeight"] = WOWB_TAG;
do -- <AbsValue ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=141
local WOWB_TAG = { [0]={  xmltag="AbsValue",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=141,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["val"] =11,
}};
WOWB_PARENT[0]["AbsValue"] = WOWB_TAG;
end
end
end
end
end
do -- <Scripts ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=146
local WOWB_TAG = { [0]={  xmltag="Scripts",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=146,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Scripts"]) then
  WOWB_PARENT[0]["Scripts"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Scripts"];
end
do -- <OnClick ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=147
local WOWB_TAG = { [0]={  xmltag="OnClick",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=147,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnClick"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\t\tif (WARRIOR.Classes:Remove(WARRIORGUI_ClassSelection.prevvalue)) then\n\t\t\t\t\t\tWARRIORGUI_ClassSpellScrollFrame_Update(\"ALERTS\");\n\t\t\t\t\tend\n\t\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <CheckButton ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=155
local WOWB_TAG = { [0]={  xmltag="CheckButton",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=155,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="WARRIORGUI_ClassType",
["inherits"] ="WARRIORGUI_CheckBoxTemplate",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_CheckButton);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_CheckButton);

do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=156
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=156,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=157
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=157,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="LEFT",
["relativeTo"] ="WARRIORGUI_DeleteClassButton",
["relativePoint"] ="RIGHT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=158
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=158,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=158
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=158,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =0,
["y"] =-1,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Scripts ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=161
local WOWB_TAG = { [0]={  xmltag="Scripts",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=161,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Scripts"]) then
  WOWB_PARENT[0]["Scripts"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Scripts"];
end
do -- <OnLoad ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=162
local WOWB_TAG = { [0]={  xmltag="OnLoad",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=162,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnLoad"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\t\tthis.index = function() \n\t\t\t\t\t\tif (WARRIOR.Classes._database[WARRIORGUI_ClassSelection.prevvalue].type == \"fifo\") then return true end\n\t\t\t\t\t\treturn false;\n\t\t\t\t\tend\n\t\t\t\t\tthis.func = function(value)\n\t\t\t\t\t\tlocal type = \"default\";\n\t\t\t\t\t\tif (value) then type = \"fifo\" end\n\t\t\t\t\t\tWARRIOR.Classes._database[WARRIORGUI_ClassSelection.prevvalue].type = type;\n\t\t\t\t\t\tWARRIOR.Settings.Save(\"WARRIOR.Classes._database\");\n\t\t\t\t\tend\n\t\t\t\t\t\n\t\t\t\t\tgetglobal(this:GetName()..\"_Label\"):SetText(\"fifo\");\n\t\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=180
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=180,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="WARRIORGUI_SpellDropZoneButton",
["inherits"] ="ItemButtonTemplate",
["enableMouse"] ="true",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Button);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=181
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=181,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=181
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=181,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =36,
["y"] =36,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=182
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=182,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=183
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=183,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="BOTTOMLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=184
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=184,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=184
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=184,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =17,
["y"] =21,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Layers ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=187
local WOWB_TAG = { [0]={  xmltag="Layers",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=187,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Layers"]) then
  WOWB_PARENT[0]["Layers"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Layers"];
end
do -- <Layer ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=188
local WOWB_TAG = { [0]={  xmltag="Layer",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=188,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["level"] ="ARTWORK",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Texture ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=189
local WOWB_TAG = { [0]={  xmltag="Texture",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=189,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="$parent_Icon",
["file"] ="Interface\\AddOns\\Warrior\\Textures\\EmptyButton",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Texture);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Texture);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=190
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=190,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=190
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=190,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =36,
["y"] =36,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=191
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=191,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=192
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=192,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="CENTER",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
end
end
end
end
do -- <Layer ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=196
local WOWB_TAG = { [0]={  xmltag="Layer",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=196,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["level"] ="OVERLAY",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <FontString ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=197
local WOWB_TAG = { [0]={  xmltag="FontString",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=197,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="$parent_Text1",
["inherits"] ="WGUI_LargeFont",
["text"] ="Spell",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=198
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=198,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=198
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=198,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =60,
["y"] =18,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=199
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=199,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=200
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=200,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
["relativeTo"] ="$parent_Icon",
["relativePoint"] ="TOPRIGHT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=201
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=201,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=201
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=201,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =-12,
["y"] =-2,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <FontHeight ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=204
local WOWB_TAG = { [0]={  xmltag="FontHeight",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=204,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["FontHeight"] = WOWB_TAG;
do -- <AbsValue ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=205
local WOWB_TAG = { [0]={  xmltag="AbsValue",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=205,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["val"] =13,
}};
WOWB_PARENT[0]["AbsValue"] = WOWB_TAG;
end
end
end
do -- <FontString ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=208
local WOWB_TAG = { [0]={  xmltag="FontString",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=208,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="$parent_Text2",
["inherits"] ="WGUI_LargeFont",
["text"] ="Drop Zone",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=209
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=209,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=209
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=209,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =60,
["y"] =18,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=210
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=210,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=211
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=211,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
["relativeTo"] ="$parent_Text1",
["relativePoint"] ="BOTTOMLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=212
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=212,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=212
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=212,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =15,
["y"] =6,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
end
end
end
do -- <Scripts ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=218
local WOWB_TAG = { [0]={  xmltag="Scripts",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=218,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Scripts"]) then
  WOWB_PARENT[0]["Scripts"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Scripts"];
end
do -- <OnLoad ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=219
local WOWB_TAG = { [0]={  xmltag="OnLoad",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=219,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnLoad"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\t\tthis:RegisterForClicks(\"LeftButtonUp\");\n\t\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnClick ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=222
local WOWB_TAG = { [0]={  xmltag="OnClick",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=222,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnClick"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\t\tWARRIORGUI_SpellDropZone();\n\t\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnReceiveDrag ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=225
local WOWB_TAG = { [0]={  xmltag="OnReceiveDrag",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=225,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnReceiveDrag"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\t\tWARRIORGUI_SpellDropZone();\n\t\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Slider ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=232
local WOWB_TAG = { [0]={  xmltag="Slider",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=232,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="WARRIORGUI_RageLimit",
["inherits"] ="WARRIORGUI_SliderTemplate",
["minValue"] =1,
["maxValue"] =100,
["valueStep"] =1,
["frameStrata"] ="DIALOG",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Slider);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Slider);

do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=233
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=233,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=234
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=234,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPRIGHT",
["relativeTo"] ="WARRIORGUI_ClassSpellScrollFrame",
["relativePoint"] ="BOTTOMRIGHT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=235
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=235,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=235
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=235,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =-20,
["y"] =-30,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Frames ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=238
local WOWB_TAG = { [0]={  xmltag="Frames",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=238,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Frames"]) then
  WOWB_PARENT[0]["Frames"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Frames"];
end
do -- <CheckButton ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=239
local WOWB_TAG = { [0]={  xmltag="CheckButton",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=239,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="$parent_Enable",
["inherits"] ="WARRIORGUI_CheckBoxTemplate",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_CheckButton);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_CheckButton);

do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=240
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=240,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=241
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=241,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=242
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=242,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=242
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=242,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =-2,
["y"] =20,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Scripts ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=245
local WOWB_TAG = { [0]={  xmltag="Scripts",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=245,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Scripts"]) then
  WOWB_PARENT[0]["Scripts"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Scripts"];
end
do -- <OnLoad ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=246
local WOWB_TAG = { [0]={  xmltag="OnLoad",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=246,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnLoad"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\t\t\t\tthis.index = function() return WARRIOR.Player.Rage._enabled end;\n\t\t\t\t\t\t\tthis.func = function(value) \n\t\t\t\t\t\t\t\tWARRIOR.Player.Rage._enabled = value\n\t\t\t\t\t\t\t\tWARRIOR.Settings.Save(\"WARRIOR.Player.Rage._enabled\");\n\t\t\t\t\t\t\tend;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tgetglobal(this:GetName()..\"_Label\"):SetText(\"Rage Limit\");\n\t\t\t\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
end
do -- <Scripts ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=258
local WOWB_TAG = { [0]={  xmltag="Scripts",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=258,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Scripts"]) then
  WOWB_PARENT[0]["Scripts"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Scripts"];
end
do -- <OnLoad ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=259
local WOWB_TAG = { [0]={  xmltag="OnLoad",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=259,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnLoad"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\t\tthis.index = function() return WARRIOR.Player.Rage._limit end;\n\t\t\t\t\tthis.func = function(e) return WARRIOR.Player.Rage:SetReserve(e) end;\n\t\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
end
do -- <Layers ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=266
local WOWB_TAG = { [0]={  xmltag="Layers",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=266,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Layers"]) then
  WOWB_PARENT[0]["Layers"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Layers"];
end
do -- <Layer ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=267
local WOWB_TAG = { [0]={  xmltag="Layer",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=267,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["level"] ="BACKGROUND",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Texture ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=269
local WOWB_TAG = { [0]={  xmltag="Texture",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=269,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["file"] ="Interface\\AddOns\\Warrior\\Textures\\ClassBackground",
}};
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Texture);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Texture);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=270
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=270,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=270
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=270,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =512,
["y"] =512,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=271
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=271,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=272
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=272,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=273
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=273,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=273
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=273,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =8,
["y"] =-8,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
end
end
do -- <Layer ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=278
local WOWB_TAG = { [0]={  xmltag="Layer",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=278,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["level"] ="OVERLAY",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <FontString ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=280
local WOWB_TAG = { [0]={  xmltag="FontString",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=280,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["inherits"] ="WGUI_LargeFont",
["text"] ="WARRIOR: Configuration",
}};
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

do -- <Color ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=281
local WOWB_TAG = { [0]={  xmltag="Color",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=281,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["r"] =1,
["g"] =1,
["b"] =0,
}};
WOWB_PARENT[0]["Color"] = WOWB_TAG;
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=282
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=282,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=283
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=283,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=284
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=284,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=284
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=284,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =15,
["y"] =-15,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
end
end
end
do -- <Backdrop ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=290
local WOWB_TAG = { [0]={  xmltag="Backdrop",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=290,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["edgeFile"] ="Interface\\DialogFrame\\UI-DialogBox-Border",
["tile"] ="false",
}};
WOWB_PARENT[0]["Backdrop"] = WOWB_TAG;
do -- <BackgroundInsets ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=291
local WOWB_TAG = { [0]={  xmltag="BackgroundInsets",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=291,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["BackgroundInsets"] = WOWB_TAG;
do -- <AbsInset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=292
local WOWB_TAG = { [0]={  xmltag="AbsInset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=292,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["left"] =11,
["right"] =11,
["top"] =11,
["bottom"] =11,
}};
WOWB_PARENT[0]["AbsInset"] = WOWB_TAG;
end
end
do -- <TileSize ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=294
local WOWB_TAG = { [0]={  xmltag="TileSize",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=294,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["TileSize"] = WOWB_TAG;
do -- <AbsValue ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=295
local WOWB_TAG = { [0]={  xmltag="AbsValue",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=295,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["val"] =32,
}};
WOWB_PARENT[0]["AbsValue"] = WOWB_TAG;
end
end
do -- <EdgeSize ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=297
local WOWB_TAG = { [0]={  xmltag="EdgeSize",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=297,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["EdgeSize"] = WOWB_TAG;
do -- <AbsValue ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=298
local WOWB_TAG = { [0]={  xmltag="AbsValue",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=298,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["val"] =32,
}};
WOWB_PARENT[0]["AbsValue"] = WOWB_TAG;
end
end
end
do -- <Scripts ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=301
local WOWB_TAG = { [0]={  xmltag="Scripts",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=301,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Scripts"]) then
  WOWB_PARENT[0]["Scripts"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Scripts"];
end
do -- <OnLoad ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=302
local WOWB_TAG = { [0]={  xmltag="OnLoad",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=302,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnLoad"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\tWARRIORGUI_OnLoad();\n\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnShow ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=305
local WOWB_TAG = { [0]={  xmltag="OnShow",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=305,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnShow"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\tthis:SetScale(2.0 - UIParent:GetScale());\n\t\t\tWARRIORGUI_ClassSpellScrollFrame_Update((WARRIORGUI_ClassSelection.prevvalue or WARRIOR.Classes._active));\n\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnHide ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=309
local WOWB_TAG = { [0]={  xmltag="OnHide",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=309,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnHide"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\tWARRIOR.Settings:Save();\n\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnClick ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=312
local WOWB_TAG = { [0]={  xmltag="OnClick",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=312,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnClick"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\tWARRIORGUI_DropMenu:Hide();\n\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnDragStart ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=315
local WOWB_TAG = { [0]={  xmltag="OnDragStart",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=315,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnDragStart"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\tthis.moving = true;\n\t\t\tthis:StartMoving();\n\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnDragStop ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=319
local WOWB_TAG = { [0]={  xmltag="OnDragStop",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=319,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnDragStop"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\tWARRIORGUI_StopMoving();\n\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnHide ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=322
local WOWB_TAG = { [0]={  xmltag="OnHide",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=322,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnHide"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\tWARRIORGUI_StopMoving();\n\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnLeave ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=325
local WOWB_TAG = { [0]={  xmltag="OnLeave",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=325,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnLeave"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\tWARRIORGUI_StopMoving();\n\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=332
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=332,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="WARRIORGUI_DropMenu",
["inherits"] ="WARRIORGUI_DropMenuTemplate",
["parent"] ="WARRIORGUI_ClassSelection",
["hidden"] ="true",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Button);

end
end
if(not WOWB_TAG[0][WOWB_ROOTXMLTAG]) then xfpc:error("No <"..WOWB_ROOTXMLTAG.."> tag?"); end
WOWB_ParseXML_QueueScripts(WOWB_TAG[0][WOWB_ROOTXMLTAG]);

xfpc:Return();
