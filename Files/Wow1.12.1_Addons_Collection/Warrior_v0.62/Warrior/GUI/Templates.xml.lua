-- Auto generated by WoWBench 1.11.0.a3 from "D:/Games/World of Warcraft/Interface/AddOns/Warrior/GUI/Templates.xml" on 2006-07-20 21:11:38
local WOWB_XMLFILE="D:/Games/World of Warcraft/Interface/AddOns/Warrior/GUI/Templates.xml";
local WOWB_XMLFILENOPATH="D:/Games/World of Warcraft/Interface/AddOns/Warrior/GUI/Templates.xml";
local WOWB_TAG = { [0]={content=""} }
local WOWB_PARENTOBJECT = WOWB_RootFrame;
local xfpc = WOWB_XMLFileParserContext:New(WOWB_XMLFILE);

do -- <Ui ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1
local WOWB_TAG = { [0]={  xmltag="Ui",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["xmlns"] ="http://www.blizzard.com/wow/ui/",
["xmlns:xsi"] ="http://www.w3.org/2001/XMLSchema-instance",
["xsi:schemaLocation"] ="http://www.blizzard.com/wow/ui/",
}};
WOWB_PARENT[0]["Ui"] = WOWB_TAG;
do -- <Frame ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=4
local WOWB_TAG = { [0]={  xmltag="Frame",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=4,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="WARRIORGUI_ClassSpellButtonTemplate",
["virtual"] ="true",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
local WOWB_PARENTOBJECT = nil;
local WOWB_ISVIRTUAL = true;
WOWB_InheritType(WOWB_TAG, WBClass_Frame);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Frame);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=5
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=5,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=5
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=5,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =355,
["y"] =32,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Frames ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=6
local WOWB_TAG = { [0]={  xmltag="Frames",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=6,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Frames"]) then
  WOWB_PARENT[0]["Frames"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Frames"];
end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=7
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=7,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="$parent_SpellButton",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Button);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=8
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=8,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=8
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=8,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =28,
["y"] =28,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=9
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=9,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=10
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=10,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="LEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
end
end
do -- <Layers ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=12
local WOWB_TAG = { [0]={  xmltag="Layers",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=12,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Layers"]) then
  WOWB_PARENT[0]["Layers"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Layers"];
end
do -- <Layer ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=13
local WOWB_TAG = { [0]={  xmltag="Layer",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=13,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["level"] ="ARTWORK",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Texture ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=14
local WOWB_TAG = { [0]={  xmltag="Texture",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=14,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="$parent_Icon",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Texture);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Texture);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=15
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=15,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=15
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=15,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =28,
["y"] =28,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=16
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=16,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=17
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=17,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="CENTER",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
end
end
end
end
end
do -- <HighlightTexture ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=22
local WOWB_TAG = { [0]={  xmltag="HighlightTexture",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=22,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["alphaMode"] ="ADD",
["file"] ="Interface\\Buttons\\ButtonHilight-Square",
}};
if(not bIgnored) then WOWB_PARENT[0]["HighlightTexture"] = WOWB_TAG; end
WOWB_InheritType(WOWB_TAG, WBClass_Texture);
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Texture);

end
do -- <Scripts ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=23
local WOWB_TAG = { [0]={  xmltag="Scripts",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=23,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Scripts"]) then
  WOWB_PARENT[0]["Scripts"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Scripts"];
end
do -- <OnLoad ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=24
local WOWB_TAG = { [0]={  xmltag="OnLoad",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=24,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnLoad"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\t\tthis:RegisterForDrag(\"LeftButton\");\n\t\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnClick ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=27
local WOWB_TAG = { [0]={  xmltag="OnClick",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=27,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnClick"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\t\tWARRIORGUI_SpellButton_OnClick(this.spellID);\n\t\t\t\t\tWARRIORGUI_SpellButton_DropZone(this.spellName);\n\t\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnDragStart ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=31
local WOWB_TAG = { [0]={  xmltag="OnDragStart",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=31,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnDragStart"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\t\tWARRIORGUI_SpellButton_OnClick(this.spellID);\n\t\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnReceiveDrag ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=34
local WOWB_TAG = { [0]={  xmltag="OnReceiveDrag",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=34,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnReceiveDrag"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\t\tWARRIORGUI_SpellButton_DropZone(this.spellName);\n\t\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnEnter ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=37
local WOWB_TAG = { [0]={  xmltag="OnEnter",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=37,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnEnter"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\t\tGameTooltip_SetDefaultAnchor(GameTooltip,UIParent);\n\t\t\t\t\tGameTooltip:SetSpell(this.spellID,BOOKTYPE_SPELL);\n\t\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnLeave ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=41
local WOWB_TAG = { [0]={  xmltag="OnLeave",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=41,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnLeave"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\t\tGameTooltip:Hide();\n\t\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
end
do -- <Layers ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=47
local WOWB_TAG = { [0]={  xmltag="Layers",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=47,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Layers"]) then
  WOWB_PARENT[0]["Layers"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Layers"];
end
do -- <Layer ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=48
local WOWB_TAG = { [0]={  xmltag="Layer",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=48,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["level"] ="OVERLAY",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <FontString ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=50
local WOWB_TAG = { [0]={  xmltag="FontString",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=50,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="$parent_Text",
["inherits"] ="WGUI_LargeFont",
["justifyH"] ="LEFT",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=51
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=51,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=51
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=51,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =200,
["y"] =18,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=52
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=52,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=53
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=53,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=54
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=54,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=54
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=54,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =35,
["y"] =-2,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Color ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=57
local WOWB_TAG = { [0]={  xmltag="Color",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=57,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["r"] =1,
["g"] =1,
["b"] =1,
}};
WOWB_PARENT[0]["Color"] = WOWB_TAG;
end
end
do -- <FontString ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=61
local WOWB_TAG = { [0]={  xmltag="FontString",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=61,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="$parent_RankText",
["inherits"] ="WGUI_NormalFont",
["justifyH"] ="LEFT",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=62
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=62,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=62
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=62,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =200,
["y"] =20,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=63
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=63,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=64
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=64,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
["relativeTo"] ="$parent_Text",
["relativePoint"] ="BOTTOMLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=65
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=65,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=65
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=65,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =0,
["y"] =8,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Color ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=68
local WOWB_TAG = { [0]={  xmltag="Color",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=68,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["r"] =1,
["g"] =1,
["b"] =0,
}};
WOWB_PARENT[0]["Color"] = WOWB_TAG;
end
end
end
end
do -- <Scripts ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=72
local WOWB_TAG = { [0]={  xmltag="Scripts",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=72,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Scripts"]) then
  WOWB_PARENT[0]["Scripts"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Scripts"];
end
do -- <OnLoad ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=73
local WOWB_TAG = { [0]={  xmltag="OnLoad",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=73,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnLoad"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\tif (this:GetID() > 1) then\n\t\t\t\tthis:SetPoint(\"TOP\", \"WARRIORGUI_ClassSpellButton_\"..(this:GetID() - 1), \"BOTTOM\", 0, 0);\n\t\t\tend\n\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Frame ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=82
local WOWB_TAG = { [0]={  xmltag="Frame",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=82,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="WARRIORGUI_EditMenuControlTemplate",
["virtual"] ="true",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
local WOWB_PARENTOBJECT = nil;
local WOWB_ISVIRTUAL = true;
WOWB_InheritType(WOWB_TAG, WBClass_Frame);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Frame);

do -- <Frames ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=83
local WOWB_TAG = { [0]={  xmltag="Frames",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=83,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Frames"]) then
  WOWB_PARENT[0]["Frames"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Frames"];
end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=84
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=84,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="$parent_Button",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Button);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=85
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=85,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=85
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=85,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =36,
["y"] =36,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=86
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=86,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=87
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=87,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="LEFT",
["relativePoint"] ="RIGHT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=88
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=88,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=88
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=88,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =-17,
["y"] =3,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <HitRectInsets ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=91
local WOWB_TAG = { [0]={  xmltag="HitRectInsets",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=91,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["HitRectInsets"] = WOWB_TAG;
do -- <AbsInset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=92
local WOWB_TAG = { [0]={  xmltag="AbsInset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=92,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["left"] =6,
["right"] =6,
["top"] =7,
["bottom"] =7,
}};
WOWB_PARENT[0]["AbsInset"] = WOWB_TAG;
end
end
do -- <Scripts ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=94
local WOWB_TAG = { [0]={  xmltag="Scripts",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=94,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Scripts"]) then
  WOWB_PARENT[0]["Scripts"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Scripts"];
end
do -- <OnClick ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=95
local WOWB_TAG = { [0]={  xmltag="OnClick",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=95,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnClick"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\t\tWARRIORGUI_ShowMenu(1);\n\t\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
do -- <NormalTexture ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=99
local WOWB_TAG = { [0]={  xmltag="NormalTexture",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=99,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["file"] ="Interface\\MainMenuBar\\UI-MainMenu-ScrollDownButton-Up",
}};
if(not bIgnored) then WOWB_PARENT[0]["NormalTexture"] = WOWB_TAG; end
WOWB_InheritType(WOWB_TAG, WBClass_Texture);
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Texture);

end
do -- <PushedTexture ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=100
local WOWB_TAG = { [0]={  xmltag="PushedTexture",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=100,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["file"] ="Interface\\MainMenuBar\\UI-MainMenu-ScrollDownButton-Down",
}};
if(not bIgnored) then WOWB_PARENT[0]["PushedTexture"] = WOWB_TAG; end
WOWB_InheritType(WOWB_TAG, WBClass_Texture);
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Texture);

end
do -- <DisabledTexture ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=101
local WOWB_TAG = { [0]={  xmltag="DisabledTexture",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=101,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["file"] ="Interface\\Buttons\\UI-ScrollBar-ScrollDownButton-Disabled",
}};
if(not bIgnored) then WOWB_PARENT[0]["DisabledTexture"] = WOWB_TAG; end
WOWB_InheritType(WOWB_TAG, WBClass_Texture);
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Texture);

end
do -- <HighlightTexture ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=102
local WOWB_TAG = { [0]={  xmltag="HighlightTexture",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=102,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["alphaMode"] ="ADD",
["file"] ="Interface\\MainMenuBar\\UI-MainMenu-ScrollDownButton-Highlight",
}};
if(not bIgnored) then WOWB_PARENT[0]["HighlightTexture"] = WOWB_TAG; end
WOWB_InheritType(WOWB_TAG, WBClass_Texture);
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Texture);

end
end
do -- <EditBox ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=104
local WOWB_TAG = { [0]={  xmltag="EditBox",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=104,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="$parent_Setting",
["letters"] =30,
["autoFocus"] ="false",
["inherits"] ="InputBoxTemplate",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_EditBox);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_EditBox);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=105
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=105,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=105
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=105,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =100,
["y"] =22,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=106
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=106,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=107
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=107,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="LEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=108
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=108,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=108
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=108,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =0,
["y"] =4,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=110
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=110,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="RIGHT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=111
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=111,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=111
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=111,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =0,
["y"] =4,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <FontString ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=114
local WOWB_TAG = { [0]={  xmltag="FontString",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=114,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["inherits"] ="ChatFontNormal",
["font"] ="Fonts\\ARIALN.TTF",
}};
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

do -- <Color ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=115
local WOWB_TAG = { [0]={  xmltag="Color",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=115,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["r"] =0,
["g"] =0,
["b"] =1,
}};
WOWB_PARENT[0]["Color"] = WOWB_TAG;
end
do -- <FontHeight ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=116
local WOWB_TAG = { [0]={  xmltag="FontHeight",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=116,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["FontHeight"] = WOWB_TAG;
do -- <AbsValue ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=117
local WOWB_TAG = { [0]={  xmltag="AbsValue",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=117,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["val"] =12,
}};
WOWB_PARENT[0]["AbsValue"] = WOWB_TAG;
end
end
end
do -- <Scripts ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=120
local WOWB_TAG = { [0]={  xmltag="Scripts",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=120,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Scripts"]) then
  WOWB_PARENT[0]["Scripts"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Scripts"];
end
do -- <OnEscapePressed ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=121
local WOWB_TAG = { [0]={  xmltag="OnEscapePressed",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=121,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnEscapePressed"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\t\tif (this:GetParent().prevvalue) then\n\t\t\t\t\t\tthis:SetText(this:GetParent().prevvalue);\n\t\t\t\t\telse\n\t\t\t\t\t\tthis:SetText(\"\");\n\t\t\t\t\tend\n\t\t\t\t\tthis:ClearFocus();\n\t\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnEnterPressed ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=129
local WOWB_TAG = { [0]={  xmltag="OnEnterPressed",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=129,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnEnterPressed"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\t\tif (this:GetParent().editFunc) then this:GetParent().editFunc(); end\n\t\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
end
do -- <Layers ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=135
local WOWB_TAG = { [0]={  xmltag="Layers",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=135,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Layers"]) then
  WOWB_PARENT[0]["Layers"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Layers"];
end
do -- <Layer ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=136
local WOWB_TAG = { [0]={  xmltag="Layer",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=136,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["level"] ="OVERLAY",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <FontString ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=137
local WOWB_TAG = { [0]={  xmltag="FontString",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=137,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="$parent_Label",
["inherits"] ="WGUI_TinyFont",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

do -- <Color ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=138
local WOWB_TAG = { [0]={  xmltag="Color",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=138,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["r"] =1,
["g"] =1,
["b"] =1,
}};
WOWB_PARENT[0]["Color"] = WOWB_TAG;
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=139
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=139,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=140
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=140,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="BOTTOMLEFT",
["relativePoint"] ="TOPLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=141
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=141,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=141
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=141,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =-4,
["y"] =4,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
end
end
end
end
do -- <Frame ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=150
local WOWB_TAG = { [0]={  xmltag="Frame",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=150,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="WARRIORGUI_TooltipBackdropTemplate",
["hidden"] ="false",
["frameStrata"] ="BACKGROUND",
["virtual"] ="true",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
local WOWB_PARENTOBJECT = nil;
local WOWB_ISVIRTUAL = true;
WOWB_InheritType(WOWB_TAG, WBClass_Frame);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Frame);

do -- <Backdrop ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=151
local WOWB_TAG = { [0]={  xmltag="Backdrop",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=151,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["bgFile"] ="Interface\\AddOns\\Warrior\\Textures\\PlainBackdrop",
["edgeFile"] ="Interface\\Tooltips\\UI-Tooltip-Border",
["tile"] ="true",
}};
WOWB_PARENT[0]["Backdrop"] = WOWB_TAG;
do -- <EdgeSize ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=152
local WOWB_TAG = { [0]={  xmltag="EdgeSize",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=152,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["EdgeSize"] = WOWB_TAG;
do -- <AbsValue ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=153
local WOWB_TAG = { [0]={  xmltag="AbsValue",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=153,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["val"] =16,
}};
WOWB_PARENT[0]["AbsValue"] = WOWB_TAG;
end
end
do -- <TileSize ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=155
local WOWB_TAG = { [0]={  xmltag="TileSize",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=155,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["TileSize"] = WOWB_TAG;
do -- <AbsValue ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=156
local WOWB_TAG = { [0]={  xmltag="AbsValue",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=156,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["val"] =16,
}};
WOWB_PARENT[0]["AbsValue"] = WOWB_TAG;
end
end
do -- <BackgroundInsets ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=158
local WOWB_TAG = { [0]={  xmltag="BackgroundInsets",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=158,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["BackgroundInsets"] = WOWB_TAG;
do -- <AbsInset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=159
local WOWB_TAG = { [0]={  xmltag="AbsInset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=159,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["left"] =3,
["right"] =3,
["top"] =3,
["bottom"] =3,
}};
WOWB_PARENT[0]["AbsInset"] = WOWB_TAG;
end
end
end
end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=165
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=165,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="WARRIORGUI_MenuOptionTemplate",
["virtual"] ="true",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
local WOWB_PARENTOBJECT = nil;
local WOWB_ISVIRTUAL = true;
WOWB_InheritType(WOWB_TAG, WBClass_Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Button);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=166
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=166,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=166
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=166,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =170,
["y"] =15,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <HighlightTexture ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=167
local WOWB_TAG = { [0]={  xmltag="HighlightTexture",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=167,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="$parentHighlight",
["alphaMode"] ="ADD",
["file"] ="Interface\\QuestFrame\\UI-QuestTitleHighlight",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then WOWB_PARENT[0]["HighlightTexture"] = WOWB_TAG; end
WOWB_InheritType(WOWB_TAG, WBClass_Texture);
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Texture);

end
do -- <Layers ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=168
local WOWB_TAG = { [0]={  xmltag="Layers",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=168,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Layers"]) then
  WOWB_PARENT[0]["Layers"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Layers"];
end
do -- <Layer ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=169
local WOWB_TAG = { [0]={  xmltag="Layer",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=169,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["level"] ="ARTWORK",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <FontString ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=170
local WOWB_TAG = { [0]={  xmltag="FontString",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=170,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="$parent_Text",
["inherits"] ="ChatFontNormal",
["font"] ="Fonts\\ARIALN.TTF",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

do -- <Color ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=171
local WOWB_TAG = { [0]={  xmltag="Color",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=171,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["r"] =1,
["g"] =1,
["b"] =1,
}};
WOWB_PARENT[0]["Color"] = WOWB_TAG;
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=172
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=172,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=173
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=173,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="LEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=174
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=174,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=174
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=174,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =3,
["y"] =0,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <FontHeight ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=177
local WOWB_TAG = { [0]={  xmltag="FontHeight",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=177,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["FontHeight"] = WOWB_TAG;
do -- <AbsValue ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=178
local WOWB_TAG = { [0]={  xmltag="AbsValue",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=178,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["val"] =10,
}};
WOWB_PARENT[0]["AbsValue"] = WOWB_TAG;
end
end
end
end
end
do -- <Scripts ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=183
local WOWB_TAG = { [0]={  xmltag="Scripts",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=183,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Scripts"]) then
  WOWB_PARENT[0]["Scripts"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Scripts"];
end
do -- <OnEnter ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=184
local WOWB_TAG = { [0]={  xmltag="OnEnter",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=184,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnEnter"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\tthis:GetParent().timer = nil;\n\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=191
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=191,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="WARRIORGUI_DropMenuTemplate",
["inherits"] ="WARRIORGUI_TooltipBackdropTemplate",
["hidden"] ="true",
["frameStrata"] ="FULLSCREEN",
["virtual"] ="true",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
local WOWB_PARENTOBJECT = nil;
local WOWB_ISVIRTUAL = true;
WOWB_InheritType(WOWB_TAG, WBClass_Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Button);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=192
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=192,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=192
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=192,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =10,
["y"] =10,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=193
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=193,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=194
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=194,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="CENTER",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
end
end
do -- <Frames ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=196
local WOWB_TAG = { [0]={  xmltag="Frames",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=196,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Frames"]) then
  WOWB_PARENT[0]["Frames"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Frames"];
end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=197
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=197,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="$parent_Option1",
["inherits"] ="WARRIORGUI_MenuOptionTemplate",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Button);

do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=198
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=198,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=199
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=199,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=200
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=200,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=200
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=200,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =5,
["y"] =-5,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=204
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=204,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="$parent_Option2",
["inherits"] ="WARRIORGUI_MenuOptionTemplate",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Button);

end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=205
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=205,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="$parent_Option3",
["inherits"] ="WARRIORGUI_MenuOptionTemplate",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Button);

end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=206
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=206,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="$parent_Option4",
["inherits"] ="WARRIORGUI_MenuOptionTemplate",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Button);

end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=207
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=207,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="$parent_Option5",
["inherits"] ="WARRIORGUI_MenuOptionTemplate",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Button);

end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=208
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=208,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="$parent_Option6",
["inherits"] ="WARRIORGUI_MenuOptionTemplate",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Button);

end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=209
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=209,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="$parent_Option7",
["inherits"] ="WARRIORGUI_MenuOptionTemplate",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Button);

end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=210
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=210,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="$parent_Option8",
["inherits"] ="WARRIORGUI_MenuOptionTemplate",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Button);

end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=211
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=211,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="$parent_Option9",
["inherits"] ="WARRIORGUI_MenuOptionTemplate",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Button);

end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=212
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=212,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="$parent_Option10",
["inherits"] ="WARRIORGUI_MenuOptionTemplate",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Button);

end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=213
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=213,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="$parent_Option11",
["inherits"] ="WARRIORGUI_MenuOptionTemplate",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Button);

end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=214
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=214,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="$parent_Option12",
["inherits"] ="WARRIORGUI_MenuOptionTemplate",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Button);

end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=215
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=215,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="$parent_Option13",
["inherits"] ="WARRIORGUI_MenuOptionTemplate",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Button);

end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=216
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=216,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="$parent_Option14",
["inherits"] ="WARRIORGUI_MenuOptionTemplate",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Button);

end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=217
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=217,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="$parent_Option15",
["inherits"] ="WARRIORGUI_MenuOptionTemplate",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Button);

end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=218
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=218,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="$parent_Option16",
["inherits"] ="WARRIORGUI_MenuOptionTemplate",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Button);

end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=219
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=219,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="$parent_Option17",
["inherits"] ="WARRIORGUI_MenuOptionTemplate",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Button);

end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=220
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=220,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="$parent_Option18",
["inherits"] ="WARRIORGUI_MenuOptionTemplate",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Button);

end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=221
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=221,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="$parent_Option19",
["inherits"] ="WARRIORGUI_MenuOptionTemplate",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Button);

end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=222
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=222,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="$parent_Option20",
["inherits"] ="WARRIORGUI_MenuOptionTemplate",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Button);

end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=223
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=223,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="$parent_Option21",
["inherits"] ="WARRIORGUI_MenuOptionTemplate",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Button);

end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=224
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=224,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="$parent_Option22",
["inherits"] ="WARRIORGUI_MenuOptionTemplate",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Button);

end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=225
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=225,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="$parent_Option23",
["inherits"] ="WARRIORGUI_MenuOptionTemplate",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Button);

end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=226
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=226,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="$parent_Option24",
["inherits"] ="WARRIORGUI_MenuOptionTemplate",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Button);

end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=227
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=227,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="$parent_Option25",
["inherits"] ="WARRIORGUI_MenuOptionTemplate",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Button);

end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=228
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=228,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="$parent_Option26",
["inherits"] ="WARRIORGUI_MenuOptionTemplate",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Button);

end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=229
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=229,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="$parent_Option27",
["inherits"] ="WARRIORGUI_MenuOptionTemplate",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Button);

end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=230
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=230,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="$parent_Option28",
["inherits"] ="WARRIORGUI_MenuOptionTemplate",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Button);

end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=231
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=231,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="$parent_Option29",
["inherits"] ="WARRIORGUI_MenuOptionTemplate",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Button);

end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=232
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=232,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="$parent_Option30",
["inherits"] ="WARRIORGUI_MenuOptionTemplate",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Button);

end
end
do -- <Scripts ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=234
local WOWB_TAG = { [0]={  xmltag="Scripts",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=234,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Scripts"]) then
  WOWB_PARENT[0]["Scripts"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Scripts"];
end
do -- <OnLoad ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=235
local WOWB_TAG = { [0]={  xmltag="OnLoad",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=235,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnLoad"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\tthis:SetBackdropColor(.1,.1,.1);\n\t\t\tthis.count = 30;\n\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnEnter ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=239
local WOWB_TAG = { [0]={  xmltag="OnEnter",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=239,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnEnter"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\tthis.timer = nil;\n\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnLeave ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=242
local WOWB_TAG = { [0]={  xmltag="OnLeave",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=242,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnLeave"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\tthis.timer = .5;\n\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnHide ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=245
local WOWB_TAG = { [0]={  xmltag="OnHide",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=245,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnHide"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\tthis.timer = nil;\n\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnUpdate ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=248
local WOWB_TAG = { [0]={  xmltag="OnUpdate",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=248,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnUpdate"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\tWARRIORGUI_MenuTimeout(arg1);\n\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=255
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=255,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="WARRIORGUI_KeybindingTemplate",
["inherits"] ="UIPanelButtonTemplate",
["virtual"] ="true",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
local WOWB_PARENTOBJECT = nil;
local WOWB_ISVIRTUAL = true;
WOWB_InheritType(WOWB_TAG, WBClass_Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Button);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=256
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=256,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=256
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=256,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =40,
["y"] =20,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Layers ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=257
local WOWB_TAG = { [0]={  xmltag="Layers",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=257,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Layers"]) then
  WOWB_PARENT[0]["Layers"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Layers"];
end
do -- <Layer ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=258
local WOWB_TAG = { [0]={  xmltag="Layer",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=258,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["level"] ="ARTWORK",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <FontString ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=259
local WOWB_TAG = { [0]={  xmltag="FontString",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=259,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="$parent_Text",
["inherits"] ="ChatFontNormal",
["font"] ="Fonts\\ARIALN.TTF",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

do -- <Color ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=260
local WOWB_TAG = { [0]={  xmltag="Color",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=260,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["r"] =1,
["g"] =1,
["b"] =1,
}};
WOWB_PARENT[0]["Color"] = WOWB_TAG;
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=261
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=261,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=262
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=262,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="CENTER",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
end
end
do -- <FontHeight ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=264
local WOWB_TAG = { [0]={  xmltag="FontHeight",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=264,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["FontHeight"] = WOWB_TAG;
do -- <AbsValue ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=265
local WOWB_TAG = { [0]={  xmltag="AbsValue",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=265,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["val"] =11,
}};
WOWB_PARENT[0]["AbsValue"] = WOWB_TAG;
end
end
end
end
end
do -- <Frames ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=270
local WOWB_TAG = { [0]={  xmltag="Frames",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=270,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Frames"]) then
  WOWB_PARENT[0]["Frames"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Frames"];
end
do -- <Frame ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=271
local WOWB_TAG = { [0]={  xmltag="Frame",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=271,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="$parent_OnKey",
["hidden"] ="true",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Frame);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Frame);

do -- <Scripts ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=272
local WOWB_TAG = { [0]={  xmltag="Scripts",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=272,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Scripts"]) then
  WOWB_PARENT[0]["Scripts"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Scripts"];
end
do -- <OnKeyDown ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=273
local WOWB_TAG = { [0]={  xmltag="OnKeyDown",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=273,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnKeyDown"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\t\tWARRIORGUI_KeyBindingButton_OnKeyDown();\n\t\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
end
do -- <NormalText ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=279
local WOWB_TAG = { [0]={  xmltag="NormalText",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=279,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["inherits"] ="GameFontHighlightSmall",
}};
if(not bIgnored) then WOWB_PARENT[0]["NormalText"] = WOWB_TAG; end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

end
do -- <DisabledText ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=280
local WOWB_TAG = { [0]={  xmltag="DisabledText",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=280,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["inherits"] ="GameFontDisable",
}};
if(not bIgnored) then WOWB_PARENT[0]["DisabledText"] = WOWB_TAG; end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

end
do -- <HighlightText ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=281
local WOWB_TAG = { [0]={  xmltag="HighlightText",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=281,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["inherits"] ="GameFontHighlightSmall",
}};
if(not bIgnored) then WOWB_PARENT[0]["HighlightText"] = WOWB_TAG; end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

end
do -- <Scripts ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=282
local WOWB_TAG = { [0]={  xmltag="Scripts",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=282,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Scripts"]) then
  WOWB_PARENT[0]["Scripts"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Scripts"];
end
do -- <OnLoad ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=283
local WOWB_TAG = { [0]={  xmltag="OnLoad",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=283,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnLoad"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\tthis:RegisterForClicks(\"LeftButtonUp\", \"RightButtonUp\", \"MiddleButtonUp\", \"Button4Up\", \"Button5Up\");\n\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnClick ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=286
local WOWB_TAG = { [0]={  xmltag="OnClick",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=286,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnClick"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\tWARRIORGUI_KeybindingButton_OnClick(arg1);\n\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Slider ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=293
local WOWB_TAG = { [0]={  xmltag="Slider",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=293,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="WARRIORGUI_OptionsSliderTemplate",
["orientation"] ="HORIZONTAL",
["virtual"] ="true",
["enableMouse"] ="true",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
local WOWB_PARENTOBJECT = nil;
local WOWB_ISVIRTUAL = true;
WOWB_InheritType(WOWB_TAG, WBClass_Slider);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Slider);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=294
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=294,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=295
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=295,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =128,
["y"] =17,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <HitRectInsets ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=297
local WOWB_TAG = { [0]={  xmltag="HitRectInsets",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=297,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["HitRectInsets"] = WOWB_TAG;
do -- <AbsInset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=298
local WOWB_TAG = { [0]={  xmltag="AbsInset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=298,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["left"] =0,
["right"] =0,
["top"] =-10,
["bottom"] =-10,
}};
WOWB_PARENT[0]["AbsInset"] = WOWB_TAG;
end
end
do -- <Backdrop ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=300
local WOWB_TAG = { [0]={  xmltag="Backdrop",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=300,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["bgFile"] ="Interface\\Buttons\\UI-SliderBar-Background",
["edgeFile"] ="Interface\\Buttons\\UI-SliderBar-Border",
["tile"] ="true",
}};
WOWB_PARENT[0]["Backdrop"] = WOWB_TAG;
do -- <EdgeSize ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=301
local WOWB_TAG = { [0]={  xmltag="EdgeSize",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=301,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["EdgeSize"] = WOWB_TAG;
do -- <AbsValue ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=302
local WOWB_TAG = { [0]={  xmltag="AbsValue",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=302,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["val"] =8,
}};
WOWB_PARENT[0]["AbsValue"] = WOWB_TAG;
end
end
do -- <TileSize ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=304
local WOWB_TAG = { [0]={  xmltag="TileSize",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=304,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["TileSize"] = WOWB_TAG;
do -- <AbsValue ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=305
local WOWB_TAG = { [0]={  xmltag="AbsValue",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=305,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["val"] =8,
}};
WOWB_PARENT[0]["AbsValue"] = WOWB_TAG;
end
end
do -- <BackgroundInsets ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=307
local WOWB_TAG = { [0]={  xmltag="BackgroundInsets",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=307,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["BackgroundInsets"] = WOWB_TAG;
do -- <AbsInset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=308
local WOWB_TAG = { [0]={  xmltag="AbsInset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=308,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["left"] =3,
["right"] =3,
["top"] =6,
["bottom"] =6,
}};
WOWB_PARENT[0]["AbsInset"] = WOWB_TAG;
end
end
end
do -- <Layers ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=311
local WOWB_TAG = { [0]={  xmltag="Layers",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=311,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Layers"]) then
  WOWB_PARENT[0]["Layers"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Layers"];
end
do -- <Layer ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=312
local WOWB_TAG = { [0]={  xmltag="Layer",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=312,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["level"] ="ARTWORK",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <FontString ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=313
local WOWB_TAG = { [0]={  xmltag="FontString",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=313,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="$parentText",
["inherits"] ="GameFontNormalSmall",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=314
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=314,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=315
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=315,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="BOTTOM",
["relativePoint"] ="TOP",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
end
end
end
do -- <FontString ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=318
local WOWB_TAG = { [0]={  xmltag="FontString",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=318,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="$parentLow",
["inherits"] ="GameFontHighlightSmall",
["text"] ="LOW",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=319
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=319,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=320
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=320,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
["relativePoint"] ="BOTTOMLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=321
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=321,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=322
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=322,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =2,
["y"] =3,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
end
do -- <FontString ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=327
local WOWB_TAG = { [0]={  xmltag="FontString",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=327,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="$parentHigh",
["inherits"] ="GameFontHighlightSmall",
["text"] ="HIGH",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=328
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=328,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=329
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=329,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPRIGHT",
["relativePoint"] ="BOTTOMRIGHT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=330
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=330,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=331
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=331,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =-2,
["y"] =3,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
end
end
end
do -- <ThumbTexture ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=338
local WOWB_TAG = { [0]={  xmltag="ThumbTexture",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=338,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="$parentThumb",
["file"] ="Interface\\Buttons\\UI-SliderBar-Button-Horizontal",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then WOWB_PARENT[0]["ThumbTexture"] = WOWB_TAG; end
WOWB_InheritType(WOWB_TAG, WBClass_Texture);
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Texture);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=339
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=339,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=340
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=340,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =32,
["y"] =32,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
end
end
do -- <Slider ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=346
local WOWB_TAG = { [0]={  xmltag="Slider",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=346,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="WARRIORGUI_SliderTemplate",
["inherits"] ="WARRIORGUI_OptionsSliderTemplate",
["virtual"] ="true",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
local WOWB_PARENTOBJECT = nil;
local WOWB_ISVIRTUAL = true;
WOWB_InheritType(WOWB_TAG, WBClass_Slider);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Slider);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=347
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=347,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=347
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=347,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =130,
["y"] =20,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Layers ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=348
local WOWB_TAG = { [0]={  xmltag="Layers",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=348,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Layers"]) then
  WOWB_PARENT[0]["Layers"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Layers"];
end
do -- <Layer ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=349
local WOWB_TAG = { [0]={  xmltag="Layer",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=349,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["level"] ="ARTWORK",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <FontString ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=350
local WOWB_TAG = { [0]={  xmltag="FontString",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=350,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="$parent_Label",
["inherits"] ="GameFontNormal",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

do -- <Color ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=351
local WOWB_TAG = { [0]={  xmltag="Color",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=351,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["r"] =1,
["g"] =1,
["b"] =1,
}};
WOWB_PARENT[0]["Color"] = WOWB_TAG;
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=352
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=352,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=353
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=353,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="BOTTOM",
["relativePoint"] ="TOP",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
end
end
end
end
end
do -- <Frames ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=358
local WOWB_TAG = { [0]={  xmltag="Frames",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=358,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Frames"]) then
  WOWB_PARENT[0]["Frames"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Frames"];
end
do -- <EditBox ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=359
local WOWB_TAG = { [0]={  xmltag="EditBox",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=359,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="$parent_Display",
["letters"] =4,
["autoFocus"] ="false",
["inherits"] ="InputBoxTemplate",
["justifyH"] ="CENTER",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_EditBox);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_EditBox);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=360
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=360,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=360
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=360,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =28,
["y"] =20,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=361
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=361,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=362
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=362,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="LEFT",
["relativePoint"] ="RIGHT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=363
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=363,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=363
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=363,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =5,
["y"] =0,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Scripts ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=366
local WOWB_TAG = { [0]={  xmltag="Scripts",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=366,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Scripts"]) then
  WOWB_PARENT[0]["Scripts"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Scripts"];
end
do -- <OnLoad ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=367
local WOWB_TAG = { [0]={  xmltag="OnLoad",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=367,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnLoad"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\t\tthis:SetTextColor(1,1,0);\n\t\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnEscapePressed ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=370
local WOWB_TAG = { [0]={  xmltag="OnEscapePressed",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=370,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnEscapePressed"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\t\tthis:SetText(this:GetParent():GetValue());\n\t\t\t\t\tthis:ClearFocus();\n\t\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnEnterPressed ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=374
local WOWB_TAG = { [0]={  xmltag="OnEnterPressed",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=374,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnEnterPressed"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\t\tWARRIORGUI_Slider_UpdateFromEditBox();\n\t\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
end
do -- <Scripts ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=380
local WOWB_TAG = { [0]={  xmltag="Scripts",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=380,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Scripts"]) then
  WOWB_PARENT[0]["Scripts"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Scripts"];
end
do -- <OnShow ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=381
local WOWB_TAG = { [0]={  xmltag="OnShow",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=381,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnShow"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\tthis:SetValue(this.index());\n\t\t\tgetglobal(this:GetName()..\"_Display\"):SetText(this:GetValue());\n\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnUpdate ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=385
local WOWB_TAG = { [0]={  xmltag="OnUpdate",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=385,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnUpdate"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\tif (not this.minmaxset) then\n\t\t\t\tthis.minmaxset = 1;\n\t\t\t\tlocal min, max = this:GetMinMaxValues();\n\t\t\t\tgetglobal(this:GetName()..\"Low\"):SetText(min);\n\t\t\t\tgetglobal(this:GetName()..\"High\"):SetText(max);\n\t\t\tend\n\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnValueChanged ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=393
local WOWB_TAG = { [0]={  xmltag="OnValueChanged",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=393,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnValueChanged"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\tWARRIORGUI_Slider_Update();\n\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <CheckButton ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=400
local WOWB_TAG = { [0]={  xmltag="CheckButton",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=400,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="WARRIORGUI_CheckBoxTemplate",
["inherits"] ="UICheckButtonTemplate",
["virtual"] ="true",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
local WOWB_PARENTOBJECT = nil;
local WOWB_ISVIRTUAL = true;
WOWB_InheritType(WOWB_TAG, WBClass_CheckButton);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_CheckButton);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=401
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=401,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=401
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=401,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =24,
["y"] =24,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Layers ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=402
local WOWB_TAG = { [0]={  xmltag="Layers",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=402,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Layers"]) then
  WOWB_PARENT[0]["Layers"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Layers"];
end
do -- <Layer ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=403
local WOWB_TAG = { [0]={  xmltag="Layer",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=403,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["level"] ="ARTWORK",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <FontString ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=404
local WOWB_TAG = { [0]={  xmltag="FontString",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=404,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="$parent_Label",
["inherits"] ="WGUI_LargeFont",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

do -- <Color ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=405
local WOWB_TAG = { [0]={  xmltag="Color",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=405,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["r"] =1,
["g"] =1,
["b"] =1,
}};
WOWB_PARENT[0]["Color"] = WOWB_TAG;
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=406
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=406,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=407
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=407,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="LEFT",
["relativeTo"] ="$parent",
["relativePoint"] ="RIGHT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=408
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=408,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=408
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=408,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =2,
["y"] =0,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
end
end
end
do -- <Scripts ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=414
local WOWB_TAG = { [0]={  xmltag="Scripts",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=414,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Scripts"]) then
  WOWB_PARENT[0]["Scripts"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Scripts"];
end
do -- <OnShow ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=415
local WOWB_TAG = { [0]={  xmltag="OnShow",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=415,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnShow"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\tthis:SetChecked(this.index());\n\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnClick ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=418
local WOWB_TAG = { [0]={  xmltag="OnClick",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=418,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnClick"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\tWARRIORGUI_CheckBox_OnClick();\n\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
end
if(not WOWB_TAG[0][WOWB_ROOTXMLTAG]) then xfpc:error("No <"..WOWB_ROOTXMLTAG.."> tag?"); end
WOWB_ParseXML_QueueScripts(WOWB_TAG[0][WOWB_ROOTXMLTAG]);

xfpc:Return();
